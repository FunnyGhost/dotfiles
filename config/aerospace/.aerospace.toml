# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    'exec-and-forget borders'
]
# Start AeroSpace at login
start-at-login = true 

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true 


#ADDED STUFF
#
#
#
#
#
# Notify Sketchybar about workspace change and update icons
exec-on-workspace-change = ['/bin/bash', '-c', 'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE && ~/.config/sketchybar/plugins/update_workspace_icons.sh']

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitfor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 16
inner.vertical = 16
outer.bottom = 10
outer.top = [{ monitor."built-in" = 12}, { monitor."resolution>=1920x1080" = 40}, 40]
outer.right = 10
outer.left = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# App shortcuts
alt-a = 'exec-and-forget open -a /Applications/Perplexity.app'       # [A]I assistant
alt-b = 'exec-and-forget open -a /Applications/Brave\ Browser.app'    # [B]rowser
alt-d = 'exec-and-forget open -a /Applications/Cursor.app'           # [D]evelopment
alt-c = 'exec-and-forget open -a /Applications/Notion\ Calendar.app' # [C]alendar
alt-g = 'exec-and-forget open -a /Applications/Ghostty.app'          # [G]hostty
alt-s = 'exec-and-forget open -a /Applications/Slack.app'            # [S]lack
alt-m = 'exec-and-forget open -a /System/Applications/Mail.app'      # [M]ail
alt-shift-r = ['exec-and-forget /opt/homebrew/bin/sketchybar --reload']

# Layout Management
alt-e = 'layout tiles horizontal vertical'      # [E]qual split layout
alt-comma = 'layout accordion horizontal vertical' # Collapse to accordion (like folding with a comma)
alt-f = 'fullscreen'                           # [F]ullscreen
alt-y = ['focus right', 'join-with down', 'layout tiles horizontal']  # Join windows (Y shape)

# Window Focus (Vim-style movement)
alt-h = 'focus left'                           # [H] - Left (Vim style)
alt-j = 'focus down'                           # [J] - Down (Vim style)
alt-k = 'focus up'                             # [K] - Up (Vim style)
alt-l = 'focus right'                          # [L] - Right (Vim style)

# Window Movement (Shift + Vim-style movement)
alt-shift-h = 'move left'                      # Move [H]orizontally left
alt-shift-j = 'move down'                      # [J]ump down
alt-shift-k = 'move up'                        # [K]limb up
alt-shift-l = 'move right'                     # Move [L]aterally right

# Window Resizing
alt-shift-minus = 'resize smart -50'           # Shrink window (minus = smaller)
alt-shift-equal = 'resize smart +50'           # Grow window (equal/plus = bigger)

# Workspace Selection (Number = Direct Access)
alt-1 = 'workspace 1'                          # Primary workspace
alt-2 = 'workspace 2'                          # Secondary workspace
alt-3 = 'workspace 3'                          # Tertiary workspace
alt-4 = 'workspace 4'                          # Quaternary workspace
alt-5 = 'workspace 5'                          # Quinary workspace
alt-6 = 'workspace 6'                          # Sextary workspace
alt-7 = 'workspace 7'                          # Septenary workspace

# Keypad Workspace Selection (for wired keyboards)
alt-keypad1 = 'workspace 1'                    # Primary workspace (keypad)
alt-keypad2 = 'workspace 2'                    # Secondary workspace (keypad)
alt-keypad3 = 'workspace 3'                    # Tertiary workspace (keypad)
alt-keypad4 = 'workspace 4'                    # Quaternary workspace (keypad)
alt-keypad5 = 'workspace 5'                    # Quinary workspace (keypad)
alt-keypad6 = 'workspace 6'                    # Sextary workspace (keypad)
alt-keypad7 = 'workspace 7'                    # Septenary workspace (keypad)

# Move Windows to Workspaces
alt-shift-1 = 'move-node-to-workspace 1'       # Move to primary
alt-shift-2 = 'move-node-to-workspace 2'       # Move to secondary
alt-shift-3 = 'move-node-to-workspace 3'       # Move to tertiary
alt-shift-4 = 'move-node-to-workspace 4'       # Move to quaternary
alt-shift-5 = 'move-node-to-workspace 5'       # Move to quinary
alt-shift-6 = 'move-node-to-workspace 6'       # Move to external monitor 1
alt-shift-7 = 'move-node-to-workspace 7'       # Move to external monitor 2

# Move Windows to Workspaces (Keypad)
alt-shift-keypad1 = 'move-node-to-workspace 1' # Move to primary (keypad)
alt-shift-keypad2 = 'move-node-to-workspace 2' # Move to secondary (keypad)
alt-shift-keypad3 = 'move-node-to-workspace 3' # Move to tertiary (keypad)
alt-shift-keypad4 = 'move-node-to-workspace 4' # Move to quaternary (keypad)
alt-shift-keypad5 = 'move-node-to-workspace 5' # Move to quinary (keypad)
alt-shift-keypad6 = 'move-node-to-workspace 6' # Move to external monitor 1 (keypad)
alt-shift-keypad7 = 'move-node-to-workspace 7' # Move to external monitor 2 (keypad)

# Quick Workspace Switching
alt-tab = 'workspace-back-and-forth'           # Toggle between last two workspaces
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'  # Cycle workspace to next monitor

# Service Mode Entry
alt-shift-semicolon = 'mode service'           # Enter service mode (like vim's : command mode)

# Service Mode Bindings
[mode.service.binding]
esc = ['reload-config', 'mode main']          # Exit service mode and reload config
r = ['flatten-workspace-tree', 'mode main']    # [R]eset layout to default
f = ['layout floating tiling', 'mode main']    # Toggle [F]loating mode
backspace = ['close-all-windows-but-current', 'mode main']  # Clear all but current window

# Window Joining (Vim-style directions)
alt-shift-h = ['join-with left', 'mode main']   # Join with window to the [H] left
alt-shift-j = ['join-with down', 'mode main']   # Join with window [J] below
alt-shift-k = ['join-with up', 'mode main']     # Join with window [K] above
alt-shift-l = ['join-with right', 'mode main']  # Join with window to the [L] right

# Future Features
# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']      # Toggle [S]ticky mode (when implemented)

# Workspace Organization

# Development Space (1)
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'  # Cursor
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'  # Ghostty
run = ['move-node-to-workspace 1']

# Browsing Space (2)
[[on-window-detected]]
if.app-id = 'com.brave.Browser'  # Brave
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = 'company.thebrowser.dia'  # Dia
run = ['move-node-to-workspace 2']

# Social Space (3)
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'  # Slack
run = ['move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.apple.mail'  # Mail
run = ['move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.cron.electron'  # Notion Calendar
run = ['move-node-to-workspace 3']

# AI Assistant Space (4)
[[on-window-detected]]
if.app-id = 'ai.perplexity.mac'  # Perplexity
run = ['move-node-to-workspace 4']

# force certain workspaces to certain monitors
[workspace-to-monitor-force-assignment]
1 = 'main'                         # Monitor sequence number from left to right. 1-based indexing
2 = 'main'                       # Main monitor
3 = 'main'                  # Non-main monitor in case when there are only two monitors
4 = 'main'                  # Non-main monitor in case when there are only two monitors
5 = 'main'
6 = 'secondary'
7 = 'secondary'
